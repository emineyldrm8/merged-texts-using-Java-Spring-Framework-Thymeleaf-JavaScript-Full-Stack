package springboot.thymeleafajax.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import springboot.thymeleafajax.demo.AjaxResponseBody;
import springboot.thymeleafajax.demo.KullaniciForm;
import springboot.thymeleafajax.demo.model.Kullanici;
import springboot.thymeleafajax.demo.mongomodel.Book;
import springboot.thymeleafajax.demo.mongorepo.Bookrepo;
import springboot.thymeleafajax.demo.service.KullaniciService;

import javax.validation.Valid;

import java.util.ArrayList;
import java.util.List;

@RestController
public class HomeRestController {
   

	private static final Object[] Bookrepo = null;
	Bookrepo bookrepo;
	List<Bookrepo> listbookrepo;
	List<Book> booklist;

	/*public HomeRestController(List<Book> booklist) {
		super();
		this.booklist = booklist;
	}*/

	public HomeRestController(Bookrepo bookrepo) {
		super();
		this.bookrepo = bookrepo;
	}

	private KullaniciService kullaniciService;
	
	@Autowired
	public void setKullaniciService(KullaniciService kullaniciService) {
		this.kullaniciService = kullaniciService;
	}

	@PostMapping("/kullanici")
    public ResponseEntity<?> getSearchResultViaAjax(@Valid @RequestBody KullaniciForm kullaniciForm, Errors hata) {

        AjaxResponseBody result = new AjaxResponseBody();
        KullaniciForm kullanici=new KullaniciForm();
       
        List<Kullanici> kullaniciList = kullaniciService.veriAl(kullaniciForm);
      
       
        if (kullaniciList.isEmpty()) {
            result.setMesaj("sorun olustu");
        } else {
            result.setMesaj("basarili");
        }

        result.setSonuc(kullaniciList);
        int i;
      
                String[] tumkelimeler=null;
        		String ad=kullaniciList.get(0).getAd(); 
        		String soyad=kullaniciList.get(0).getSoyad(); 
        		//tum kelimeler soyadda
        		//buradaki bosluk degişkenlerini "-" ile degidtereceğim
        		String kullan=soyad.replace(' ', '-');
        		tumkelimeler=kullan.split("-");
        		//su an tum kelimeler burda
        		 List<String> birlesmisDizi = new ArrayList<>();
        		 for (String string : tumkelimeler) {
        	            if (!birlesmisDizi.contains(string)) {
        	                birlesmisDizi.add(string);
        	            }
        	        }
        		 for(String s:birlesmisDizi)
        		 {
        			 System.out.println(s);
        		 }

        		
        		int kelime=Integer.parseInt(ad);
        		String[] strArray= new String[kelime];
        		strArray=soyad.split("-");
        		String[] sayi= new String[kelime];
        		for(int a=0;a<kelime;a++)
        		{
        			sayi[a]=ad;
        		}
        		
        	
        		for (int j = 0; j< kelime; j++){  
        		String girilenkelime=strArray[j];
        		String number=sayi[j];
        		bookrepo.save(new Book(ad,girilenkelime));}
        
        return ResponseEntity.ok(result);
        

    }
	
	
	

}